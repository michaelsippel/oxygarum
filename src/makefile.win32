CPP  = C:/Dev-Cpp/bin/g++.exe
CC   = C:/Dev-Cpp/bin/gcc.exe
WINDRES = windres.exe
RES  = 
OBJ  = display/display.o object/face.o input/keyboard.o material/material.o object/object.o render/opengl.o loader/oxy3d_loader.o oxygarum.o material/texture.o vector/vector2d.o vector/vector3d.o font/font.o $(RES)
LINKOBJ  = $(OBJ)
LIBS =  -L"C:/Dev-Cpp/lib" C:/Dev-Cpp/lib/libopengl32.a C:/Dev-Cpp/lib/libglu32.a C:/Dev-Cpp/lib/libsdl.a
INCS =  -I"C:/Dev-Cpp/include" 
CXXINCS =  -I"C:/Dev-Cpp/lib/gcc/mingw32/3.4.2/include"  -I"C:/Dev-Cpp/include/c++/3.4.2/backward"  -I"C:/Dev-Cpp/include/c++/3.4.2/mingw32"  -I"C:/Dev-Cpp/include/c++/3.4.2"  -I"C:/Dev-Cpp/include" 
BIN  = oxygarum-win32.a
CXXFLAGS = $(CXXINCS)  
CFLAGS = $(INCS) -I "../include"  
RM = rm -f

.PHONY: all all-before all-after clean clean-custom

all: all-before oxygarum-win32.a all-after


clean: clean-custom
	${RM} $(OBJ) $(BIN)

$(BIN): $(LINKOBJ)
	ar r $(BIN) $(LINKOBJ)
	ranlib $(BIN)

render/display.o: render/display.c
	$(CC) -c render/display.c -o render/display.o $(CFLAGS)

object/face.o: object/face.c
	$(CC) -c objeczt/face.c -o object/face.o $(CFLAGS)

input/keyboard.o: input/keyboard.c
	$(CC) -c input/keyboard.c -o input/keyboard.o $(CFLAGS)

material/material.o: material/material.c
	$(CC) -c material/material.c -o material/material.o $(CFLAGS)

object/object.o: object/object.c
	$(CC) -c object/object.c -o object/object.o $(CFLAGS)

render/opengl.o: render/opengl.c
	$(CC) -c render/opengl.c -o render/opengl.o $(CFLAGS)

loader/oxy3d_loader.o: loader/oxy3d_loader.c
	$(CC) -c loader/oxy3d_loader.c -o loader/oxy3d_loader.o $(CFLAGS)

loader/oxy2d_loader.o: loader/oxy2d_loader.c
	$(CC) -c loader/oxy2d_loader.c -o loader/oxy2d_loader.o $(CFLAGS)

oxygarum.o: oxygarum.c
	$(CC) -c oxygarum.c -o oxygarum.o $(CFLAGS)

material/texture.o: material/texture.c
	$(CC) -c material/texture.c -o material/texture.o $(CFLAGS)

vector/vector2d.o: vector/vector2d.c
	$(CC) -c vector/vector2d.c -o vector/vector2d.o $(CFLAGS)

vector/vector3d.o: vector/vector3d.c
	$(CC) -c vector/vector3d.c -o vector/vector3d.o $(CFLAGS)

font/font.o: font/font.c
	$(CC) -c font/font.c -o font/font.o $(CFLAGS)

